<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>567</x>
      <y>140</y>
      <w>245</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>/Check/
--
#settings : CheckSettingsInterface
#config : Config
--
#Check()
_+getInstance() : Check_

/+getNamespace() : string/
/+getId() : string/
/+getTitle() : string/
/+storesFindings() : boolean/
+settings() : CheckSettingsInterface
/+run(lastResult : CheckResult) : CheckResult/
/+help() : string[]/
+evaluate(result : CheckResult) : string[]
/+getMessage(resultConst : int) : string/
+getUniqueIdentifier() : string

+lastResult() : CheckResult
+lastRun() : integer
+isSkipped() : boolean
+skippedBy() : integer
+skippedOn() : integer
+enable()
+skip()
+storeResult(result : CheckResult)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>140</y>
      <w>175</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
CheckSettingsInterface
--
--
+buildForm(form, form_state)
+submitForm(form, form_state)
+get(key)
+set(key, value)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>217</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>805</x>
      <y>133</y>
      <w>105</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
#settings</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>273</y>
      <w>175</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>/CheckSettings/
--
#config : Config
--
+CheckSettings(config : Config)
+buildForm(form, form_state)
+submitForm(form, form_state)
+get(key) : object
+set(key, value)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>140</y>
      <w>231</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>CheckResult
--
SUCCESS : int
FAIL           : int
WARN       : int
INFO         : int
--
-check : Check
-result : int
-findings : undefined[]
-time : integer
--
+CheckResult(check, result, findings, [time])
_+combine(old, fresh) : CheckResult_
+check() : Check
+result() : boolean
+findings() : undefined[]
+time() : integer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>259</x>
      <y>182</y>
      <w>266</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>bg=yellow
*_getInstance()_*
Checks implement the singleton pattern.

*storesFindings()*
Returns whether the findings should be stored in the configuration storage, or if they should be reproduced whenever needed.
If a check can generate a lot of findings this function should return false.

*evaluate()*
Evaluates the given check result. Used under the check-specific help (accessed with the Details link in the D7 version).

*getMessage()*
Returns the result message for the given success constant.
Also provides easier integration with Site Audit module.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>518</x>
      <y>203</y>
      <w>63</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>147</y>
      <w>357</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;create&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;20.0;490.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>63</y>
      <w>231</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>bg=yellow
*CheckResult(old, fresh)*
A constructor, that clones the old CheckResult then updates its findings with the fresh one.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>7</x>
      <y>112</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>343</y>
      <w>231</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>_Checklist_
--
--
+checks() : Map(string, Check[])
+checks(namespace : string) : Check[]
+runChecks(Check[]) : CheckResult[]
+storeResults(CheckResult[]) : void
+getCheck(namespace : string, id : string) : Check</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>133</y>
      <w>357</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
-check</panel_attributes>
    <additional_attributes>490.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>455</y>
      <w>231</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>_SecurityReview_
--
--
+isConfigured() : boolean
+isLogging() : boolean
+getLastRun() : int
+getUntrustedRoles() : null | string[]
+setConfigured() : void
+setLogging(value : boolean) : void
+setLastRun(value : int) : void
+setUntrustedRoles(value : string[]) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>259</x>
      <y>455</y>
      <w>301</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>_Security_
--
--
+untrustedRoles() : string[]
+defaultUntrustedRoles() : string[]
+rolePermissions(roles : string[], groupByRoleID : boolean) : mixed
+untrustedPermissions(groupByRoleID : boolean) : mixed
+trustedRoles() : string[]
+trustedPermissions(groupByRoleID : boolean) : mixed
+unsafeTags() : string[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>266</x>
      <y>553</y>
      <w>98</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>bg=yellow
This list will grow.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>567</x>
      <y>455</y>
      <w>259</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>bg=yellow
Difference between SecurityReview::getUntrustedRoles() and Security::untrustedRoles() is that the first always returns what is stored inside the configuration system (which might be an empty array if it hasn't been configured yet), and the latter takes the described situation into account and returns the defaultUntrustedRoles() if there is no valid information stored.
The rationale behind this is that SecurityReview is only an interface to the module's settings, and Security will provide useful security informations.</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
